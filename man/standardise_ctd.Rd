% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/standardise_ctd.R
\name{standardise_ctd}
\alias{standardise_ctd}
\title{Convert a CellTypeDataset into standardized format}
\usage{
standardise_ctd(
  ctd,
  dataset,
  input_species = NULL,
  output_species = "human",
  non121_strategy = "drop_both_species",
  force_new_quantiles = TRUE,
  force_standardise = FALSE,
  remove_unlabeled_clusters = FALSE,
  numberOfBins = 40,
  keep_annot = TRUE,
  keep_plots = TRUE,
  as_sparse = TRUE,
  as_DelayedArray = FALSE,
  rename_columns = TRUE,
  make_columns_unique = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{ctd}{Input CellTypeData.}

\item{dataset}{CellTypeData. name.}

\item{input_species}{Which species the gene names in \code{exp} come from.
See \link[EWCE]{list_species} for all available species.}

\item{output_species}{Which species' genes names to convert \code{exp} to.
See \link[EWCE]{list_species} for all available species.}

\item{non121_strategy}{How to handle genes that don't have
1:1 mappings between \code{input_species}:\code{output_species}.
Options include:\cr
\itemize{
\item{\code{"drop_both_species" or "dbs" or 1} : \cr}{
Drop genes that have duplicate
mappings in either the \code{input_species} or \code{output_species} \cr
(\emph{DEFAULT}).}
\item{\code{"drop_input_species" or "dis" or 2} : \cr}{
Only drop genes that have duplicate
mappings in the \code{input_species}.}
\item{\code{"drop_output_species" or "dos" or 3} : \cr}{
Only drop genes that have duplicate
mappings in the \code{output_species}.}
\item{\code{"keep_both_species" or "kbs" or 4} : \cr}{
Keep all genes regardless of whether
they have duplicate mappings in either species.}
\item{\code{"keep_popular" or "kp" or 5} : \cr}{
Return only the most "popular" interspecies ortholog mappings.
 This procedure tends to yield a greater number of returned genes
 but at the cost of many of them not being true biological 1:1 orthologs.}
 \item{\code{"sum","mean","median","min" or "max"} : \cr}{
 When \code{gene_df} is a matrix and \code{gene_output="rownames"},
  these options will aggregate many-to-one gene mappings
  (\code{input_species}-to-\code{output_species})
  after dropping any duplicate genes in the \code{output_species}.
 }
}}

\item{force_new_quantiles}{By default, quantile computation is
skipped if they have already been computed.
Set \code{=TRUE} to override this and generate new quantiles.}

\item{force_standardise}{If \code{ctd} has already been standardised, whether
to rerun standardisation anyway (Default: \code{FALSE}).}

\item{remove_unlabeled_clusters}{Remove any samples that have
numeric column names.}

\item{numberOfBins}{Number of non-zero quantile bins.}

\item{keep_annot}{Keep the column annotation data if provided.}

\item{keep_plots}{Keep the dendrograms if provided.}

\item{as_sparse}{Convert to sparse matrix.}

\item{as_DelayedArray}{Convert to \code{DelayedArray}.}

\item{rename_columns}{Remove \code{replace_chars} from column names.}

\item{make_columns_unique}{Rename each columns with the prefix
\code{dataset.species.celltype}.}

\item{verbose}{Print messages.
Set \code{verbose=2} if you want to print all messages
 from internal functions as well.}
}
\value{
Standardised CellTypeDataset.
}
\description{
This function will take a CTD,
drop all genes without 1:1 orthologs with the
\code{output_species} ("human" by default),
convert the remaining genes to gene symbols,
assign names to each level,
and convert all matrices to sparse matrices and/or \code{DelayedArray}.
}
\examples{
ctd <- ewceData::ctd()
ctd_std <- standardise_ctd(
    ctd = ctd,
    input_species = "mouse",
    dataset = "Zeisel2016"
)
}
